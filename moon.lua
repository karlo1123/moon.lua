--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then v19=v0(v3(v20,1,1));return "";else local v74=0;local v75;while true do if (v74==0) then v75=v2(v0(v20,16));if v19 then local v104=v5(v75,v19);v19=nil;return v104;else return v75;end break;end end end end);local function v21(v22,v23,v24)if v24 then local v76=(v22/((880 -(290 + 588))^(v23-(3 -(591 -(159 + 430))))))%((1377 -(881 + 494))^(((v24-1) -(v23-(596 -((2311 -(865 + 881)) + 16 + 14)))) + (214 -(140 + 73)))) ;return v76-(v76%(4 -3)) ;else local v77=1892 -(676 + 1216) ;local v78;while true do if (v77==((996 -(394 + 383)) -(181 + (647 -(528 + 81))))) then v78=2^(v23-(1477 -(1162 + 314))) ;return (((v22%(v78 + v78))>=v78) and (3 -2)) or (711 -(456 + 255)) ;end end end end local function v25()local v38=0 + (0 -0) ;local v39;while true do if (v38==1) then return v39;end if (v38==(1967 -(1090 + 877))) then v39=v1(v16,v18,v18);v18=v18 + (2 -1) ;v38=(291 -142) -(56 + 92) ;end end end local function v26()local v40,v41=v1(v16,v18,v18 + (784 -(281 + 501)) );v18=v18 + 1 + 1 ;return (v41 * 256) + v40 ;end local function v27()local v42=(1550 -(49 + 1357)) -(51 + 93) ;local v43;local v44;local v45;local v46;while true do if (v42==(3 -2)) then return (v46 * (28434852 -11657636)) + (v45 * (67064 -(1297 + 231))) + (v44 * (622 -366)) + v43 ;end if (v42==(0 -0)) then v43,v44,v45,v46=v1(v16,v18,v18 + (1985 -(1010 + 379 + 593)) );v18=v18 + (1376 -(1303 + 69)) ;v42=1;end end end local function v28()local v47=1482 -(16 + 1466) ;local v48;local v49;local v50;local v51;local v52;local v53;while true do if (v47==(1 + 0 + 0)) then v50=1043 -(492 + 550) ;v51=(v21(v49,1830 -(1237 + (1467 -(643 + 232))) ,1858 -(580 + 1258) ) * ((6 -(836 -(395 + 437)))^((1653 -(12 + 566)) -(90 + 953)))) + v48 ;v47=(3 -2) + (2 -1) ;end if (v47==(1976 -(616 + 1358))) then v52=v21(v49,21,42 -11 );v53=((v21(v49,15 + (158 -(121 + 20)) )==((1 + 1) -1)) and  -(3 -2)) or (1510 -(1103 + 406)) ;v47=308 -(190 + 115) ;end if (v47==(0 + 0)) then v48=v27();v49=v27();v47=4 -3 ;end if (v47==(2 + 1)) then if (v52==(0 -0)) then if (v51==(0 -(0 -0))) then return v53 * (0 + 0) ;else local v105=1147 -(287 + 860) ;while true do if (v105==(0 + 0)) then v52=1 + 0 ;v50=0 + 0 ;break;end end end elseif (v52==(2973 -(406 + 520))) then return ((v51==(175 -(127 + 48))) and (v53 * (1/(0 -0)))) or (v53 * NaN) ;end return v8(v53,v52-(2879 -((372 -(148 + 52)) + 1684)) ) * (v50 + (v51/((1631 -(1297 + 332))^(113 -61)))) ;end end end local function v29(v30)local v54=0;local v55;local v56;while true do if (v54==1) then v55=v3(v16,v18,(v18 + v30) -(2 -1) );v18=v18 + v30 ;v54=2 + 0 ;end if (v54==2) then v56={};for v95=1114 -(90 + 1023) , #v55 do v56[v95]=v2(v1(v3(v55,v95,v95)));end v54=3 + (677 -(630 + 47)) ;end if (v54==(0 -0)) then v55=nil;if  not v30 then local v97=(0 + 0) -0 ;while true do if ((1280 -(816 + 464))==v97) then v30=v27();if (v30==(1329 -(444 + 885))) then return "";end break;end end end v54=(875 -(102 + 772)) + 0 ;end if (v54==(3 + (940 -(590 + 350)))) then return v6(v56);end end end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v57=0;local v58;local v59;local v60;local v61;local v62;local v63;local v64;local v65;while true do if (v57~=4) then else while true do if (1==v58) then v61=nil;v62=nil;v58=1 + 1 ;end if (3~=v58) then else v65=nil;while true do local v106=0 -0 ;while true do if (v106==1) then if (v59==(1 + 1)) then local v107=0 -0 ;while true do local v113=0;local v114;while true do if (v113~=(0 + 0)) then else v114=0;while true do if (v114==0) then if ((1 -0)==v107) then local v145=0;local v146;while true do if (v145~=(0 -0)) then else v146=0;while true do if (v146~=(1703 -(287 + 1416))) then else local v199=0;while true do if (v199==(0 + 0)) then for v221=1,v27() do v62[v221]=v27();end return v63;end end end end break;end end end if (v107==0) then for v149=836 -(561 + 274) ,v27() do local v150=0;local v151;local v152;local v153;while true do if (v150==(1042 -(910 + 132))) then v151=1954 -(1173 + 781) ;v152=nil;v150=1;end if (v150~=(393 -(100 + 292))) then else v153=nil;while true do if (v151~=(0 + 0)) then else local v203=0;while true do if (v203~=0) then else v152=0 -0 ;v153=nil;v203=1;end if (v203~=(2 -1)) then else v151=1;break;end end end if (v151~=(178 -(137 + 40))) then else while true do if (v152==(0 -0)) then v153=v25();if (v21(v153,2 -1 ,1)~=0) then else local v225=0 + 0 ;local v226;local v227;local v228;local v229;local v230;while true do if (v225~=(0 -0)) then else v226=0;v227=nil;v225=1;end if (2==v225) then v230=nil;while true do if (v226==1) then local v233=0;while true do if (v233==0) then v229=nil;v230=nil;v233=3 -2 ;end if ((4 -3)==v233) then v226=2;break;end end end if (v226==0) then local v234=0 + 0 ;local v235;while true do if (v234~=0) then else v235=772 -(161 + 611) ;while true do if (v235==(0 -0)) then local v243=1833 -(561 + 1272) ;while true do if (v243~=1) then else v235=1;break;end if ((303 -(243 + 60))==v243) then v227=0;v228=nil;v243=1 -0 ;end end end if (1==v235) then v226=1;break;end end break;end end end if (v226==2) then while true do if ((3 + 0)~=v227) then else if (v21(v229,8 -5 ,3)==1) then v230[1623 -(306 + 1313) ]=v65[v230[4]];end v60[v149]=v230;break;end if (v227~=2) then else local v237=93 -(68 + 25) ;while true do if (v237==(1 + 0)) then v227=3;break;end if (v237~=(518 -(444 + 74))) then else if (v21(v229,1 + 0 ,1)==(1 + 0)) then v230[2]=v65[v230[714 -(423 + 289) ]];end if (v21(v229,2,1273 -(1090 + 181) )~=1) then else v230[11 -8 ]=v65[v230[5 -2 ]];end v237=1;end end end if (v227==(1 + 0)) then local v238=0 + 0 ;while true do if (v238==(0 -0)) then local v244=0;while true do if ((232 -(46 + 185))==v244) then v238=1 + 0 ;break;end if (0==v244) then v230={v26(),v26(),nil,nil};if (v228==(0 + 0)) then local v250=0 + 0 ;local v251;local v252;while true do if ((610 -(212 + 398))==v250) then v251=0 + 0 ;v252=nil;v250=1;end if (v250~=(3 -2)) then else while true do if (v251==0) then v252=0 -0 ;while true do if ((1513 -(560 + 953))==v252) then v230[960 -(510 + 447) ]=v26();v230[4]=v26();break;end end break;end end break;end end elseif (v228==(672 -(661 + 10))) then v230[6 -3 ]=v27();elseif (v228==(1030 -(162 + 866))) then v230[7 -4 ]=v27() -((1 + 1)^(6 + 10)) ;elseif (v228~=3) then else local v255=0;local v256;while true do if (v255==(459 -(31 + 428))) then v256=0;while true do if (v256~=0) then else v230[3]=v27() -(2^(64 -48)) ;v230[4]=v26();break;end end break;end end end v244=1 -0 ;end end end if (v238~=1) then else v227=2;break;end end end if (v227~=0) then else local v239=0;local v240;while true do if (v239==(105 -(78 + 27))) then v240=0 + 0 ;while true do if (v240==(1 + 0)) then v227=636 -(383 + 252) ;break;end if (v240==(0 -0)) then local v249=0;while true do if (v249==(1305 -(471 + 834))) then v228=v21(v153,2 -0 ,1 + 2 );v229=v21(v153,1 + 3 ,6);v249=161 -(138 + 22) ;end if (v249~=(2 -1)) then else v240=1;break;end end end end break;end end end end break;end end break;end if (v225==1) then v228=nil;v229=nil;v225=2;end end end break;end end break;end end break;end end end for v154=3 -2 ,v27() do v61[v154-1 ]=v33();end v107=1 + 0 ;end break;end end break;end end end end break;end if (v106==0) then if (v59==(0 + 0)) then local v108=0 + 0 ;local v109;while true do if (v108==(0 -0)) then v109=0 -0 ;while true do if (2==v109) then v59=1;break;end if (v109==(763 -(324 + 438))) then v62={};v63={v60,v61,nil,v62};v109=2;end if (v109~=(983 -(472 + 511))) then else local v116=0 -0 ;while true do if (v116~=(211 -(193 + 17))) then else v109=1;break;end if ((0 + 0)~=v116) then else v60={};v61={};v116=1;end end end end break;end end end if (v59~=1) then else local v110=0 + 0 ;while true do if (v110==2) then v59=2;break;end if (v110~=(0 + 0)) then else v64=v27();v65={};v110=1 + 0 ;end if (v110==(1125 -(523 + 601))) then local v115=1725 -(492 + 1233) ;while true do if (v115~=1) then else v110=2 + 0 ;break;end if (0==v115) then for v120=1 + 0 ,v64 do local v121=0;local v122;local v123;local v124;while true do if (v121==(1854 -(984 + 870))) then v122=0;v123=nil;v121=1 + 0 ;end if (1==v121) then v124=nil;while true do if (0==v122) then local v188=0 -0 ;while true do if (v188==(3 -2)) then v122=1 + 0 ;break;end if (v188==(0 -0)) then v123=v25();v124=nil;v188=2 -1 ;end end end if (v122==1) then if (v123==(1 + 0)) then v124=v25()~=0 ;elseif (v123==2) then v124=v28();elseif (v123~=3) then else v124=v29();end v65[v120]=v124;break;end end break;end end end v63[3]=v25();v115=144 -(79 + 64) ;end end end end end v106=1948 -(1162 + 785) ;end end end break;end if (v58~=(2 -0)) then else v63=nil;v64=nil;v58=3;end if (v58==(539 -(13 + 526))) then local v102=0 -0 ;local v103;while true do if (v102~=0) then else v103=0;while true do if (v103~=0) then else v59=1288 -(128 + 1160) ;v60=nil;v103=1;end if (1==v103) then v58=1;break;end end break;end end end end break;end if (v57==1) then v60=nil;v61=nil;v57=2;end if (v57==0) then v58=0;v59=nil;v57=2 -1 ;end if (v57~=(1977 -(140 + 1834))) then else v64=nil;v65=nil;v57=4;end if (v57~=(6 -4)) then else v62=nil;v63=nil;v57=3;end end end local function v34(v35,v36,v37)local v66=v35[1];local v67=v35[2];local v68=v35[3];return function(...)local v69=1;local v70= -1;local v71={...};local v72=v12("#",...) -1 ;local function v73()local v79=v66;local v80=v67;local v81=v68;local v82=v32;local v83={};local v84={};local v85={};for v89=1080 -(161 + 919) ,v72 do if (((18 + 6 + 2003)<=(4293 -1046)) and (v89>=v81)) then v83[v89-v81 ]=v71[v89 + (1603 -(1201 + 401)) ];else v85[v89]=v71[v89 + (1980 -(277 + 1702)) ];end end local v86=(v72-v81) + 1 + 0 ;local v87;local v88;while true do local v90=(1753 -(1101 + 652)) + 0 ;local v91;local v92;while true do if ((v90==(0 + 0)) or ((4244 -(1426 + 68))>(4338 -(34 + 61)))) then v91=0 + 0 ;v92=nil;v90=1 -0 ;end if (((910 + 185)<=((1698 -(805 + 269)) + 2130)) and (v90==(2 -1))) then while true do if (((2066 -(36 + 503))<=(1392 + 3280)) and (v91==0)) then v92=0;while true do if ((3619>=(74 + 2620)) and (v92==(1 + 0))) then if ((v88<=(284 -(238 + 36))) or ((4760 -2556)<((1203 + 1731) -(817 + 58 + 617)))) then if ((v88<=(1915 -(1671 + 240))) or ((1807 + 110 + 131)>(3745 + 604))) then if (((4474 -(1129 + 814))>=(2908 -(15 + 52 + 641))) and (v88<=1)) then if (((529 + 470)<=((23362 -16172) -2981)) and (v88==(0 -0))) then local v125=0 + (0 -0) ;local v126;local v127;local v128;while true do if (((4780 -2966)==(3188 -((448 -289) + (2553 -(1094 + 244))))) and (v125==1)) then v128=nil;while true do if ((v126==(0 + (1575 -(294 + 1281)))) or ((5381 -2142)<(1015 -567))) then local v192=1323 -(167 + 1156) ;local v193;while true do if (((1867 -((1881 -1248) + 298))<(1647 + 835 + 389)) and (v192==(154 -(93 + 61)))) then v193=0 -0 ;while true do if (((3240 + 654)>(3509 -(1910 + 56))) and (v193==(1380 -(540 + 839)))) then v126=539 -(450 + 88) ;break;end if ((v193==(0 + 0 + 0)) or ((275 -(485 -273))>=(1270 + 449))) then local v223=(0 + 0) -0 ;while true do if ((v223==1) or ((805 + 1691)==3878)) then v193=1;break;end if ((v223==(0 + 0)) or ((1843 + 574)>(10738 -7657))) then v127=v87[(1730 -(202 + 1524)) -2 ];v128=v85[v127];v223=1;end end end end break;end end end if ((v126==(1 + 0)) or ((313 + 1883)==3691)) then for v200=v127 + (542 -(429 + 112)) ,v87[1 + 2 + 0 ] do v7(v128,v85[v200]);end break;end end break;end if (((694 + (1828 -(671 + 619)))<(844 + 893)) and ((0 + 0)==v125)) then local v183=0;while true do if ((v183==(1134 -(541 + 593))) or ((393 + 1327)>(6327 -2086))) then v126=0 -0 ;v127=nil;v183=(91 -(12 + 77)) -1 ;end if (((383 + 3446)>=(58 + 171)) and (v183==(1120 -(466 + (1923 -1270))))) then v125=1;break;end end end end else v85[v87[1 + (2 -1) ]][v87[(1764 -(215 + 681)) -(93 + 772) ]]=v85[v87[18 -14 ]];end elseif ((v88<=(265 -(180 + 83))) or (1183>=(9029 -(6795 -(94 + 30))))) then local v131=0 -(0 -0) ;local v132;local v133;local v134;local v135;local v136;while true do if ((v131==(1 + (852 -(505 + 346)))) or ((6 + 30)>(719 + 1115))) then v136=nil;while true do if (((10630 -5883)<=((5651 -1785) + 958)) and (1==v132)) then local v194=0 + 0 ;while true do if ((v194==(1 + 0)) or ((13899 -11091)>((4967 -(230 + 780)) + 795))) then v132=2;break;end if ((v194==(0 + 0)) or ((1 + 69)>((3243 -(62 + 42)) -(752 + 721)))) then local v215=0;while true do if (((0 + 0)==v215) or (1419>=(4204 -(884 + 99)))) then v70=(v135 + v133) -((2 + 0) -1) ;v136=0 + (0 -0) ;v215=(549 + 226) -(214 + 560) ;end if ((v215==(1 + 0)) or ((1380 + 158)>4077)) then v194=3 -2 ;break;end end end end end if ((((8000 -5663) + 1659)==3996) and (v132==(0 -0))) then local v195=0 + 0 ;local v196;while true do if ((v195==((0 -0) + (1142 -(738 + 404)))) or (((1479 -(75 + 755)) + (1563 -459))==4136)) then v196=0;while true do if ((v196==(578 -(23 + 555))) or ((2105 + 2119)>=(1755 + 219 + 2371))) then v133=v87[2];v134,v135=v82(v85[v133](v13(v85,v133 + (1 -0) ,v87[1418 -(435 + 980) ])));v196=1840 -(1539 + 300) ;end if ((v196==1) or (2716>(10880 -6578))) then v132=926 -(611 + 314) ;break;end end break;end end end if ((v132==(3 -1)) or ((2757 -(1324 + 219))>=(2636 + 74))) then for v201=v133,v70 do local v202=0;while true do if (((0 -0)==v202) or ((323 -196)>(4256 -(526 + 16)))) then v136=v136 + (810 -(113 + 696)) ;v85[v201]=v134[v136];break;end end end break;end end break;end if (((8731 -5388)==(704 + 2639)) and (v131==(833 -(247 + 586)))) then local v184=10 -(5 + 5) ;while true do if ((v184==((0 + 0) -0)) or ((1949 -(450 + 551))>3225)) then v132=0 + 0 ;v133=nil;v184=1 + 0 ;end if ((v184==1) or ((5520 -(9639 -6366))<=(1889 -(1047 + 826)))) then v131=1 + 0 ;break;end end end if ((v131==(719 -(299 + 419))) or (((1169 + 2451) -(582 + 482 + 700))>=(4861 -(1250 + 127)))) then v134=nil;v135=nil;v131=(183 + 73) -(137 + 117) ;end end elseif ((v88==3) or (((4232 -2522) -(114 + 711))>(7186 -2450))) then local v156=0 + 0 ;local v157;local v158;while true do if (((5856 -4238)==(2741 -(195 + 928))) and (v156==(0 + 0))) then local v190=(0 -0) + 0 ;while true do if ((1627>=(94 + (937 -(548 + 203)))) and (v190==(369 -(291 + 77)))) then v156=430 -(16 + 413) ;break;end if (((407 + 1009 + (1889 -(319 + 81)))>=(2943 -(518 + 255))) and (v190==(167 -(25 + 142)))) then v157=0 + 0 ;v158=nil;v190=1 + (0 -0) ;end end end if ((v156==1) or ((4092 -(1470 + 379))>=(2240 + 2719))) then while true do if (((2106 + 255 + 2585)>=(1133 + 1893)) and (v157==0)) then v158=v87[1702 -(1591 + 109) ];v85[v158](v13(v85,v158 + 1 ,v87[3]));break;end end break;end end else v85[v87[(1 + 3) -2 ]]=v37[v87[(6027 -4211) -(905 + 908) ]];end elseif ((v88<=(22 -15)) or ((5183 -(990 + 577))<3045)) then if ((2961<=3746) and (v88<=(579 -((334 -170) + 410)))) then v85[v87[2]]=v85[v87[1739 -(134 + 1602) ]];elseif ((v88>6) or ((1016 + 3068)<=3724)) then v85[v87[2]]=v87[5 -(921 -(336 + 583)) ];else local v163=0 + 0 ;local v164;local v165;local v166;while true do if (((1177 -((1033 -(166 + 345)) + 529))<2536) and (v163==((0 -0) -0))) then v164=0 + 0 + 0 ;v165=nil;v163=190 -(137 + 52) ;end if (((1375 -(647 + 243))<=1120) and (v163==(484 -(389 + 94)))) then v166=nil;while true do if (((842 + 348)<=(4705 -((3293 -2042) + 347))) and (v164==(1 -0))) then v85[v165 + (1637 -(644 + 992)) ]=v166;v85[v165]=v166[v87[4 -0 ]];break;end if ((v164==(1176 -(1019 + 157))) or ((1515 + 358)==(11359 -8111))) then v165=v87[2 + 0 ];v166=v85[v87[(11 + 0) -8 ]];v164=1 + 0 ;end end break;end end end elseif ((v88<=((2732 -(547 + 767)) -(59 + 933 + 418))) or ((4586 -2813)>=((5013 -(240 + 90)) -(239 + 108)))) then if ((v85[v87[(1 + 6) -5 ]]==v87[(899 + 986) -(1121 + 760) ]) or (4487>((4050 + 5529) -4916))) then v69=v69 + ((1422 -(600 + 821)) -(873 -(448 + 425))) ;else v69=v87[1399 -(1183 + 213) ];end elseif ((v88==(36 -27)) or ((9278 -5414)>(2795 + 1560))) then v85[v87[920 -(767 + 151) ]]=v87[1345 -(1072 + 270) ]~=(0 -(0 + 0)) ;else local v169=(2301 -(1350 + 206)) -(587 + (330 -172)) ;local v170;local v171;while true do if ((v169==(0 -0)) or (2597>(11964 -7885))) then v170=0 + 0 ;v171=nil;v169=(2165 -(105 + 770)) -(732 + 557) ;end if ((v169==(1 -(0 -0))) or ((832 + 2677)>=4874)) then while true do if ((((9330 -5706) + 396)>(4801 -(771 + 361))) and ((0 + 0)==v170)) then v171=v87[(2529 -(964 + 184)) -(1171 + 208) ];v85[v171]=v85[v171]();break;end end break;end end end elseif ((v88<=(37 -21)) or (((2961 -1643) + 885)>(3045 -(235 + 310)))) then if (((312 + 2689)<(4439 -(7 + 610))) and (v88<=(3 + 10))) then if ((v88<=11) or ((36 + 10)>(1794 -((1247 -(330 + 911)) + 9)))) then v85[v87[787 -(528 + 257) ]]=v34(v80[v87[3]],nil,v37);elseif ((v88==(39 -27)) or ((2535 + 1649)==((1226 + 2111) -(867 + 709)))) then local v172=0 + 0 ;local v173;while true do if (((5457 -((950 -386) + 383))>=(2332 -(1546 + 352))) and (((0 -0) -0)==v172)) then v173=v87[991 -(69 + 920) ];v85[v173](v85[v173 + (1892 -(396 + 1495)) ]);break;end end else v85[v87[2]]();end elseif ((v88<=(1503 -(145 + 1344))) or ((660 + 149)<=593)) then local v140=(0 -0) -0 ;local v141;local v142;while true do if (((13498 -9552)>(9978 -6121)) and (v140==1)) then while true do if ((v141==(672 -((1527 -(783 + 128)) + 56))) or ((3330 -(5999 -3868))<=(2084 -899))) then v142=v87[2];v85[v142]=v85[v142](v13(v85,v142 + (726 -((46 -28) + (930 -223))) ,v70));break;end end break;end if (((0 -0)==v140) or ((931 -(236 + 580))>=(1704 + 851 + 507))) then v141=0;v142=nil;v140=1 + 0 ;end end elseif ((2511==(5289 -2778)) and (v88>(1 + 14))) then v85[v87[(17 -12) -(4 -1) ]]={};elseif (((11194 -6433)==(5940 -(858 + 321))) and (v87[4 -(1663 -(1126 + 535)) ]==v85[v87[4 -0 ]])) then v69=v69 + (1 -0) ;else v69=v87[5 -2 ];end elseif (((2419 -1407)<=(3807 -((392 -122) + 137))) and (v88<=((181 -131) -31))) then if ((v88<=(504 -(24 + 9 + 454))) or ((1857 -((417 -272) + 8 + 413))<(1958 -(2105 -(29 + 866))))) then local v143=456 -(279 + 177) ;local v144;while true do if ((2568>=((2439 -(376 + 140)) -(1530 + 391))) and (v143==0)) then v144=v87[1 + 1 ];v85[v144]=v85[v144](v13(v85,v144 + ((4 -3) -0) ,v87[(7 + 2) -6 ]));break;end end elseif (((10979 -6716)>=(5181 -1157)) and (v88>(7 + 7 + 4))) then local v175=0;local v176;local v177;local v178;local v179;while true do if ((v175==(0 -0)) or ((8589 -(13209 -8112))<=(3231 -(318 + 99)))) then v176=0 + 0 + 0 ;v177=nil;v175=1 -0 ;end if (((1824 + 59)<4971) and (v175==(1 + 1))) then while true do if ((v176==(1052 -(592 + 459))) or ((4356 -(67 + 1597))<(739 -486))) then v179=v87[8 -5 ];for v216=1,v179 do v178[v216]=v85[v177 + v216 ];end break;end if (((12398 -(22452 -13518))==(5405 -(829 + 1112))) and ((1008 -((2614 -(16 + 1623)) + 33))==v176)) then v177=v87[(1643 -(18 + 926)) -(288 + 409) ];v178=v85[v177];v176=2 -1 ;end end break;end if (((5720 -3189)>=1425) and (v175==(1 + 0))) then v178=nil;v179=nil;v175=2 + 0 ;end end else v69=v87[2 + 1 ];end elseif ((v88<=((9 + 29) -18)) or ((6932 -5038)==(5718 -(6160 -(1314 + 354))))) then for v147=v87[2 + 0 ],v87[10 -7 ] do v85[v147]=nil;end elseif ((((6087 -3446) -1236)>=(1438 -(167 + 121))) and (v88==((1945 -(304 + 558)) -(353 + 709)))) then do return;end else v85[v87[(1370 -640) -(406 + 322) ]]=v85[v87[3]][v87[4 + 0 ]];end v69=v69 + (155 -(143 + 11)) ;break;end if (((5584 -(657 + 262))>=1188) and (v92==(1390 -(14 + 1376)))) then local v111=0 + 0 ;local v112;while true do if (((52 + 703)>=209) and (v111==(1353 -(284 + 1069)))) then v112=0 -0 ;while true do if ((v112==(27 -(26 + 1))) or (2137>=(230 + 2228))) then v87=v79[v69];v88=v87[1 + 0 ];v112=1720 -(1617 + 102) ;end if ((v112==1) or ((2883 -(650 + 1032))<(30 + 46))) then v92=1;break;end end break;end end end end break;end end break;end end end end A,B=v32(v11(v73));if  not A[1] then local v93=0;local v94;while true do if (0==v93) then v94=v35[4][v69] or "?" ;error("Script error at ["   .. v94   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end end;end return v34(v33(),{},v17)(...);end vv9(),...);end
